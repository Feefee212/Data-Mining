<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script" position="(124.0, 190.0)" />
		<node id="1" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table" position="(293.0, 167.0)" />
		<node id="2" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1)" position="(115.0, 296.0)" />
		<node id="3" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (1)" position="(253.0, 284.0)" />
		<node id="4" name="Edit Domain" qualified_name="Orange.widgets.data.oweditdomain.OWEditDomain" project_name="Orange3" version="" title="Edit Domain" position="(255.0, 386.0)" />
		<node id="5" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (2)" position="(387.0, 327.0)" />
		<node id="6" name="Bar Plot" qualified_name="Orange.widgets.visualize.owbarplot.OWBarPlot" project_name="Orange3" version="" title="Bar Plot" position="(388.0, 421.0)" />
		<node id="7" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1) (1)" position="(159.0, 65.0)" />
		<node id="8" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1) (1) (1)" position="(483.0, 83.0)" />
		<node id="9" name="Edit Domain" qualified_name="Orange.widgets.data.oweditdomain.OWEditDomain" project_name="Orange3" version="" title="Edit Domain (1)" position="(564.0, 206.0)" />
		<node id="10" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (4)" position="(675.0, 168.0)" />
		<node id="11" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (3)" position="(614.0, 56.0)" />
		<node id="12" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot" position="(609.0, 425.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="1" source_node_id="2" sink_node_id="3" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="2" source_node_id="2" sink_node_id="4" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="3" source_node_id="4" sink_node_id="5" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="4" source_node_id="4" sink_node_id="6" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="5" source_node_id="8" sink_node_id="9" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="6" source_node_id="9" sink_node_id="10" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="7" source_node_id="8" sink_node_id="11" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="8" source_node_id="9" sink_node_id="12" source_channel="Data" sink_channel="Data" enabled="true" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00)\x00\x00\x00)\x00\x00\x04\x83\x00\x00\x02\xac\x00\x00\x00)\x00\x00\x00E\x00\x00\x04\x83\x00\x00\x02\xac\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00)\x00\x00\x00E\x00\x00\x04\x83\x00\x00\x02\xac', 'scriptLibrary': [{'name': 'scrape1', 'script': 'browser = webdriver.Chrome(ChromeDriverManager().install())\n\n#2 define endpoint\nurl = "https://pantip.com/topic/41611639"\n \nbrowser.get(url)\n\n#3. get body element\n\nbody = browser.find_element(By.TAG_NAME,"body")\n\n#4. dynamically score pages\nno_of_pagedowns = 20\n\nwhile no_of_pagedowns:\n    body.send_keys(Keys.PAGE_DOWN)  \n    time.sleep(self.wait)\n    no_of_pagedowns -=1\n\n\n#5. click on all &lt;a class="see-more"&gt;\natags = browser.find_elements(By.CSS_SELECTOR,"a[class = \'see-more\']")\n   \nfor atag in atags:\n    time.sleep(0.5)\n    atag.click()\n\n#6. get page source from webbrowser\n    time.sleep(1)\npage_source = browser.page_source\n\n#7. parse source\ns = BeautifulSoup(page_source,"html.parser")\n\n#8. find all post tag\n\nMyli=s.find_all(\'div\',attrs={\'class\':\'display-post-status-leftside\'})\n\n\n#9. works with each item\nfor num in range(len(Myli)):\n    row={} #make object as dict\n\n    #9.1 comment\n    commentNo           =   Myli[num].find(\'span\',attrs={\'class\':\'display-post-number\'})\n\n    if commentNo is None:\n        continue\n\n    row[\'comment_no\']   =   commentNo.get_text().strip()\n    row[\'post_id\']      =   postId\n    #9.2  \n    ttime               = Myli[num].find(\'abbr\',attrs={\'class\':\'timeago\'})\n    if ttime is not None:\n    row[\'created\']      = ttime[\'data-utime\']\n\n    #8.3  \n    comment             = Myli[num].find(\'div\',attrs={\'class\':\'display-post-story\'})\n    row[\'comment\']      = comment.get_text()\n\n    list1.append(row)\n\n    df=pd.DataFrame(list1)\n\ntable1 = table_from_frame(df)\n', 'filename': None}], 'scriptText': 'from Orange.data.pandas_compat import table_from_frame,table_to_frame\nimport pandas as pd\nimport Orange.data\nimport os\nimport time\nfrom xml.etree.ElementTree import Comment\nfrom bs4 import BeautifulSoup\nfrom selenium.webdriver.common.by import By\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom webdriver_manager.chrome import ChromeDriverManager\nbrowser = webdriver.Chrome(ChromeDriverManager().install())\n#2 list\nlist1 = []\n#2 define endpoint\nurl = "https://pantip.com/topic/41611639"\n\nbrowser.get(url)\n\n#3. get body element\n\nbody = browser.find_element(By.TAG_NAME,"body")\n\n#4. dynamically score pages\nno_of_pagedowns = 5\n\nwhile no_of_pagedowns:\n    body.send_keys(Keys.PAGE_DOWN)\n    time.sleep(0.3)\n    no_of_pagedowns -=1\n\n\n\natags = browser.find_elements(By.CSS_SELECTOR,"a[class = \'see-more\']")\n\nfor atag in atags:\n    time.sleep(0.5)\n    atag.click()\n\n#6. get page source from webbrowser\ntime.sleep(1)\n\npage_source = browser.page_source\n\n#7. parse source\ns = BeautifulSoup(page_source,"html.parser")\n\n#8. find all post tag\n\nMyli=s.find_all(\'div\',attrs={\'class\':\'display-post-status-leftside\'})\n\n\n#9. works with each item\nfor num in range(len(Myli)):\n    row={} #make object as dict\n\n    #9.1 comment\n    commentNo           =   Myli[num].find(\'span\',attrs={\'class\':\'display-post-number\'})\n\n    if commentNo is None:\n        continue\n\n    row[\'comment_no\']   =   commentNo.get_text().strip()\n    row[\'post_id\']      =   41611639\n    #9.2\n    ttime               = Myli[num].find(\'abbr\',attrs={\'class\':\'timeago\'})\n    if ttime is not None:\n        row[\'created\']      = ttime[\'data-utime\']\n\n    #9.3\n    comment             = Myli[num].find(\'div\',attrs={\'class\':\'display-post-story\'})\n    row[\'comment\']      = comment.get_text()\n\n    list1.append(row)\n\ndf=pd.DataFrame(list1)\nbrowser.close()\nbrowser.quit()\nout_data = table_from_frame(df)\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xa8\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="1" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x04\xff\x00\x00\x03\x1f\x00\x00\x00\x00\x00\x00\x005\x00\x00\x04\xff\x00\x00\x03\x1f\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x005\x00\x00\x04\xff\x00\x00\x03\x1f', 'select_rows': True, 'selected_cols': None, 'selected_rows': None, 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="2" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00;\x00\x00\x00a\x00\x00\x04\x95\x00\x00\x02\xe4\x00\x00\x00;\x00\x00\x00}\x00\x00\x04\x95\x00\x00\x02\xe4\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00;\x00\x00\x00}\x00\x00\x04\x95\x00\x00\x02\xe4', 'scriptLibrary': [{'name': 'scrape1', 'script': 'browser = webdriver.Chrome(ChromeDriverManager().install())\n\n#2 define endpoint\nurl = "https://pantip.com/topic/41611639"\n \nbrowser.get(url)\n\n#3. get body element\n\nbody = browser.find_element(By.TAG_NAME,"body")\n\n#4. dynamically score pages\nno_of_pagedowns = 20\n\nwhile no_of_pagedowns:\n    body.send_keys(Keys.PAGE_DOWN)  \n    time.sleep(self.wait)\n    no_of_pagedowns -=1\n\n\n#5. click on all &lt;a class="see-more"&gt;\natags = browser.find_elements(By.CSS_SELECTOR,"a[class = \'see-more\']")\n   \nfor atag in atags:\n    time.sleep(0.5)\n    atag.click()\n\n#6. get page source from webbrowser\n    time.sleep(1)\npage_source = browser.page_source\n\n#7. parse source\ns = BeautifulSoup(page_source,"html.parser")\n\n#8. find all post tag\n\nMyli=s.find_all(\'div\',attrs={\'class\':\'display-post-status-leftside\'})\n\n\n#9. works with each item\nfor num in range(len(Myli)):\n    row={} #make object as dict\n\n    #9.1 comment\n    commentNo           =   Myli[num].find(\'span\',attrs={\'class\':\'display-post-number\'})\n\n    if commentNo is None:\n        continue\n\n    row[\'comment_no\']   =   commentNo.get_text().strip()\n    row[\'post_id\']      =   postId\n    #9.2  \n    ttime               = Myli[num].find(\'abbr\',attrs={\'class\':\'timeago\'})\n    if ttime is not None:\n    row[\'created\']      = ttime[\'data-utime\']\n\n    #8.3  \n    comment             = Myli[num].find(\'div\',attrs={\'class\':\'display-post-story\'})\n    row[\'comment\']      = comment.get_text()\n\n    list1.append(row)\n\n    df=pd.DataFrame(list1)\n\ntable1 = table_from_frame(df)\n', 'filename': None}], 'scriptText': 'from Orange.data.pandas_compat import table_from_frame,table_to_frame\nimport pandas as pd\nimport Orange.data\nimport os\nimport time\nfrom xml.etree.ElementTree import Comment\nfrom bs4 import BeautifulSoup\nfrom selenium.webdriver.common.by import By\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom webdriver_manager.chrome import ChromeDriverManager\nbrowser = webdriver.Chrome(ChromeDriverManager().install())\n#2 list\nlist1 = []\n#2 define endpoint\nurl = "https://www.settrade.com/th/equities/market-summary/top-ranking/overview"\n\nbrowser.get(url)\n\n#3. get body element\n\nbody = browser.find_element(By.TAG_NAME,"body")\n\n#4. dynamically score pages\nno_of_pagedowns = 5\n\nwhile no_of_pagedowns:\n    body.send_keys(Keys.PAGE_DOWN)\n    time.sleep(0.3)\n    no_of_pagedowns -=1\n\n\n\n# atags = browser.find_elements(By.CSS_SELECTOR,"a[class = \'see-more\']")\n\n# for atag in atags:\n    # time.sleep(0.5)\n    # atag.click()\n\n#6. get page source from webbrowser\ntime.sleep(1)\n\npage_source = browser.page_source\n\n#7. parse source\ntree = BeautifulSoup(page_source,"html.parser")\n\n#8. find all post tag\n\n\ntr_tags =tree.find_all(\'tr\',attrs={\'role\':\'row\'})\n\n#9. works with each item\nfor i in range(len(tr_tags)):\n    row={} #make object as dict\n\n    row[\'symbol\']       = tr_tags[i].find(\'a\'  ,attrs={\'class\':\'symbol\'}).get_text()\n    no_tags             = tr_tags[i].find_all(\'div\',attrs={\'class\':\'mt-1\'});\n    row[\'no\']           = no_tags[0].get_text()\n    row[\'value\']        = float(no_tags[1].get_text().strip().replace(\',\',\'\'))\n    row[\'price\']        = no_tags[2].get_text()\n    change = no_tags[3].get_text().strip();\n    if change == \'-\':\n        row[\'change\'] = 0\n    else:\n        row[\'change\'] = float(change)\n    row[\'pchange\']       = no_tags[4].get_text()\n    list1.append(row)\n\ndf=pd.DataFrame(list1)\nbrowser.close()\nbrowser.quit()\nout_data = table_from_frame(df)\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xa8\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="3" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02j\x00\x00\x02j\x00\x00\x08\t\x00\x00\x05\xd4\x00\x00\x02j\x00\x00\x02\x86\x00\x00\x08\t\x00\x00\x05\xd4\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x02j\x00\x00\x02\x86\x00\x00\x08\t\x00\x00\x05\xd4', 'select_rows': True, 'selected_cols': None, 'selected_rows': None, 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="4" format="pickle">gASVLAMAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5
lENCAdnQywADAAAAAAEsAAAAagAAA78AAAKaAAABLAAAAIYAAAO/AAACmgAAAAAAAAAABQAAAAEs
AAAAhgAAA78AAAKalIwLX192ZXJzaW9uX1+USwKMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFu
Z2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBRfZG9tYWlu
X2NoYW5nZV9zdG9yZZR9lCiMBlN0cmluZ5SMBXRvcGljlCmJh5SGlF2UjA1Bc0NhdGVnb3JpY2Fs
lCmGlGFoEIwEdGFnc5QpiYeUhpRdlGgVKYaUYWgQjARsaW5rlCmJh5SGlF2UaBUphpRhjAZTdHJp
bmeUjAZzeW1ib2yUKYmHlIaUXZSMDUFzQ2F0ZWdvcmljYWyUKYaUYWghjAJub5QpiYeUhpRdlIwM
QXNDb250aW51b3VzlCmGlGFoIYwFdmFsdWWUKYmHlIaUXZRoLCmGlGFoIYwFcHJpY2WUKYmHlIaU
XZRoLCmGlGFoIYwHcGNoYW5nZZQpiYeUhpRdlGgsKYaUYXVK/v///4aUjBZfbWVyZ2VfZGlhbG9n
X3NldHRpbmdzlH2USvz///+GlIwOX3NlbGVjdGVkX2l0ZW2UaChLBIaUSv7///+GlIwRb3V0cHV0
X3RhYmxlX25hbWWUjACUSv7///+GlGgESwJ1jAphdHRyaWJ1dGVzlH2UKGguSwKMBmNoYW5nZZRL
AnWMBW1ldGFzlH2UKGgiSwNoKEsDaDNLA2g4SwN1dWJoCSmBlH2UKGgMfZQoaA59lChoE12UaBZh
aBldlGgbYWgeXZRoIGFoJF2UaCdhaCpdlGgtYWgwXZRoMmFoNV2UaDdhaDpdlGg8YXVK/v///4aU
aD59lEr8////hpRoQWg4SwSGlEr+////hpRoRGhFSv7///+GlGgESwJ1aEd9lGhJSwJzaEp9lCho
IksDaChLA2guSwNoM0sDaDhLA3V1YmV1Lg==
</properties>
		<properties node_id="5" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x04\xff\x00\x00\x03\x1f\x00\x00\x00\x00\x00\x00\x005\x00\x00\x04\xff\x00\x00\x03\x1f\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x005\x00\x00\x04\xff\x00\x00\x03\x1f', 'select_rows': True, 'selected_cols': None, 'selected_rows': None, 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="6" format="pickle">gASVwAEAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAEBAAAAeAAABMAAAALrAAABAQAAAJQAAATAAAAC
6wAAAAAAAAAABQAAAAEBAAAAlAAABMAAAALrlIwJc2VsZWN0aW9ulE6MD3Zpc3VhbF9zZXR0aW5n
c5R9lIwFZ3JhcGiUfZSMC19fdmVyc2lvbl9flEsBjBBjb250ZXh0X3NldHRpbmdzlF2UjBVvcmFu
Z2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojAlhbm5vdF92
YXKUTkr+////hpSMCWNvbG9yX3ZhcpROSv7///+GlIwJZ3JvdXBfdmFylIwGc3ltYm9slEtlhpSM
DHNlbGVjdGVkX3ZhcpSMBXZhbHVllEtmhpRoCH2UaApLAXWMCmF0dHJpYnV0ZXOUfZQoaBxLAowG
Y2hhbmdllEsCdYwFbWV0YXOUfZQoaBlLAYwCbm+USwKMBXByaWNllEsCjAdwY2hhbmdllEsCdXVi
YXUu
</properties>
		<properties node_id="7" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00}\x00\x00\x00\x95\x00\x00\x04\xd7\x00\x00\x03\x18\x00\x00\x00}\x00\x00\x00\xb1\x00\x00\x04\xd7\x00\x00\x03\x18\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00}\x00\x00\x00\xb1\x00\x00\x04\xd7\x00\x00\x03\x18', 'scriptLibrary': [{'name': 'scrape1', 'script': 'browser = webdriver.Chrome(ChromeDriverManager().install())\n\n#2 define endpoint\nurl = "https://pantip.com/topic/41611639"\n \nbrowser.get(url)\n\n#3. get body element\n\nbody = browser.find_element(By.TAG_NAME,"body")\n\n#4. dynamically score pages\nno_of_pagedowns = 20\n\nwhile no_of_pagedowns:\n    body.send_keys(Keys.PAGE_DOWN)  \n    time.sleep(self.wait)\n    no_of_pagedowns -=1\n\n\n#5. click on all &lt;a class="see-more"&gt;\natags = browser.find_elements(By.CSS_SELECTOR,"a[class = \'see-more\']")\n   \nfor atag in atags:\n    time.sleep(0.5)\n    atag.click()\n\n#6. get page source from webbrowser\n    time.sleep(1)\npage_source = browser.page_source\n\n#7. parse source\ns = BeautifulSoup(page_source,"html.parser")\n\n#8. find all post tag\n\nMyli=s.find_all(\'div\',attrs={\'class\':\'display-post-status-leftside\'})\n\n\n#9. works with each item\nfor num in range(len(Myli)):\n    row={} #make object as dict\n\n    #9.1 comment\n    commentNo           =   Myli[num].find(\'span\',attrs={\'class\':\'display-post-number\'})\n\n    if commentNo is None:\n        continue\n\n    row[\'comment_no\']   =   commentNo.get_text().strip()\n    row[\'post_id\']      =   postId\n    #9.2  \n    ttime               = Myli[num].find(\'abbr\',attrs={\'class\':\'timeago\'})\n    if ttime is not None:\n    row[\'created\']      = ttime[\'data-utime\']\n\n    #8.3  \n    comment             = Myli[num].find(\'div\',attrs={\'class\':\'display-post-story\'})\n    row[\'comment\']      = comment.get_text()\n\n    list1.append(row)\n\n    df=pd.DataFrame(list1)\n\ntable1 = table_from_frame(df)\n', 'filename': None}], 'scriptText': 'from Orange.data.pandas_compat import table_from_frame,table_to_frame\nimport pandas as pd\nimport Orange.data\nimport os\nimport time\nimport email\nfrom xml.etree.ElementTree import Comment\nfrom bs4 import BeautifulSoup\nfrom selenium.webdriver.common.by import By\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom webdriver_manager.chrome import ChromeDriverManager\n#browser = webdriver.Chrome(ChromeDriverManager().install())\n#2 list\nlist1 = []\n \npath = \'/Users/mac/Desktop/alumni/\'\nfiles = os.listdir(path)\ncount = 1\nfor file in files:\n    if file.endswith(".mhtml"):\n        #create person dict\n        person = {}\n        \n        #assign person id \n        person[\'id\'] = file.split(\'.\')[0]\n        fileName = path+file\n        with open(fileName) as fp:\n        #open content by email\n            msg = email.message_from_file(fp)\n            for part in msg.walk():\n                \n                    if(part.get_content_type() == "text/html"):\n                        content = part.get_payload(decode=False)\n                  \n                        soup    = BeautifulSoup(content,\'html.parser\')\n                        \n                        title_tag   = soup.find(\'h1\',{\'class\':\'3D"text-heading-xlarge\'})\n                        print(title_tag)\n                        count +=1\n                        continue\n  \n                        # if title_tag is not None:\n                         \n                            # title_tag   = title_tag.find(\'h1\',attrs={\'class\':\'text-heading-xlarge\'})\n                            # person[\'name\'] = title_tag.get_text()\n                            \n                        \n                        #add person into list\n        #list1.append(person)\n\n# print(list1)\nprint(count)\n\n \n\n \n\n# df=pd.DataFrame(list1)\n# browser.close()\n# browser.quit()\n# out_data = table_from_frame(df)\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xa8\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="8" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00$\x00\x00\x009\x00\x00\x04~\x00\x00\x02\xf0\x00\x00\x00$\x00\x00\x00U\x00\x00\x04~\x00\x00\x02\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00$\x00\x00\x00U\x00\x00\x04~\x00\x00\x02\xf0', 'scriptLibrary': [{'name': 'scrape1', 'script': 'browser = webdriver.Chrome(ChromeDriverManager().install())\n\n#2 define endpoint\nurl = "https://pantip.com/topic/41611639"\n \nbrowser.get(url)\n\n#3. get body element\n\nbody = browser.find_element(By.TAG_NAME,"body")\n\n#4. dynamically score pages\nno_of_pagedowns = 20\n\nwhile no_of_pagedowns:\n    body.send_keys(Keys.PAGE_DOWN)  \n    time.sleep(self.wait)\n    no_of_pagedowns -=1\n\n\n#5. click on all &lt;a class="see-more"&gt;\natags = browser.find_elements(By.CSS_SELECTOR,"a[class = \'see-more\']")\n   \nfor atag in atags:\n    time.sleep(0.5)\n    atag.click()\n\n#6. get page source from webbrowser\n    time.sleep(1)\npage_source = browser.page_source\n\n#7. parse source\ns = BeautifulSoup(page_source,"html.parser")\n\n#8. find all post tag\n\nMyli=s.find_all(\'div\',attrs={\'class\':\'display-post-status-leftside\'})\n\n\n#9. works with each item\nfor num in range(len(Myli)):\n    row={} #make object as dict\n\n    #9.1 comment\n    commentNo           =   Myli[num].find(\'span\',attrs={\'class\':\'display-post-number\'})\n\n    if commentNo is None:\n        continue\n\n    row[\'comment_no\']   =   commentNo.get_text().strip()\n    row[\'post_id\']      =   postId\n    #9.2  \n    ttime               = Myli[num].find(\'abbr\',attrs={\'class\':\'timeago\'})\n    if ttime is not None:\n    row[\'created\']      = ttime[\'data-utime\']\n\n    #8.3  \n    comment             = Myli[num].find(\'div\',attrs={\'class\':\'display-post-story\'})\n    row[\'comment\']      = comment.get_text()\n\n    list1.append(row)\n\n    df=pd.DataFrame(list1)\n\ntable1 = table_from_frame(df)\n', 'filename': None}], 'scriptText': 'from Orange.data.pandas_compat import table_from_frame,table_to_frame\nimport pandas as pd\nimport Orange.data\nimport os\nimport time\nimport email\nfrom xml.etree.ElementTree import Comment\nfrom bs4 import BeautifulSoup\nfrom selenium.webdriver.common.by import By\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom webdriver_manager.chrome import ChromeDriverManager\n#browser = webdriver.Chrome(ChromeDriverManager().install())\n#2 list\nlist1 = []\n \npath = \'/Users/mac/Desktop/pages/\'\nfiles = os.listdir(path)\ncount = 1\nfor file in files:\n    if file.endswith(".html"):\n        #create person dict\n        id = file.split(\'.\')[0]\n        fileName = path+file\n        with open(fileName,\'rb\') as fp:\n            print(\'working on \' + fileName)\n            soup    = BeautifulSoup(fp.read(),\'html.parser\' )\n            \n            #get name\n            tag_table   = soup.find(\'table\',{\'class\':\'table table-info\'})\n            trs      = tag_table.find_all(\'tr\')\n            for tr in trs:\n                td1 = tr.find(\'td\',{\'class\':\'text-left\'})\n                td2 = tr.find_all(\'td\',{\'class\':\'text-right\'})\n                if td1 is not None:\n                    name    = td1.get_text()\n                    share   = float(td2[0].get_text().replace(\',\',\'\'))\n                    share_p = float(td2[1].get_text().replace(\'%\',\'\'))\n                    stock = {"bank":id,"investor":name, "share":share, "share_percent":share_p}\n                    list1.append(stock)\n             \n\ndf=pd.DataFrame(list1)\n\nout_data = table_from_frame(df)\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xa8\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="9" format="pickle">gASViCUAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5
lENCAdnQywADAAAAAAEsAAAAagAAA78AAAKaAAABLAAAAIYAAAO/AAACmgAAAAAAAAAABQAAAAEs
AAAAhgAAA78AAAKalIwLX192ZXJzaW9uX1+USwKMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFu
Z2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBRfZG9tYWlu
X2NoYW5nZV9zdG9yZZR9lCiMBlN0cmluZ5SMBXRvcGljlCmJh5SGlF2UjA1Bc0NhdGVnb3JpY2Fs
lCmGlGFoEIwEdGFnc5QpiYeUhpRdlGgVKYaUYWgQjARsaW5rlCmJh5SGlF2UaBUphpRhjAZTdHJp
bmeUjAZzeW1ib2yUKYmHlIaUXZSMDUFzQ2F0ZWdvcmljYWyUKYaUYWghjAJub5QpiYeUhpRdlIwM
QXNDb250aW51b3VzlCmGlGFoIYwFdmFsdWWUKYmHlIaUXZRoLCmGlGFoIYwFcHJpY2WUKYmHlIaU
XZRoLCmGlGFoIYwHcGNoYW5nZZQpiYeUhpRdlGgsKYaUYYwGU3RyaW5nlIwCTU+UKYmHlIaUXZSM
DUFzQ2F0ZWdvcmljYWyUKYaUYYwGU3RyaW5nlIwEbmFtZZQpiYeUhpRdlIwNQXNDYXRlZ29yaWNh
bJQphpRhaESMBXNoYXJllCmJh5SGlF2UjAxBc0NvbnRpbnVvdXOUKYaUYWhEjA1zaGFyZV9wZXJj
ZW50lCmJh5SGlF2UaE8phpRhaESMCGludmVzdG9ylCmJh5SGlF2UKGhJKYaUjBFDYXRlZ29yaWVz
TWFwcGluZ5RdlCiMJyAgQkFOSyBKVUxJVVMgQkFFUiAmIENPLiBMVEQsIFNJTkdBUE9SRZSMJyAg
QkFOSyBKVUxJVVMgQkFFUiAmIENPLiBMVEQsIFNJTkdBUE9SRZSGlIwZICBCQkhJU0wgTk9NSU5F
RVMgTElNSVRFRJSMGSAgQkJISVNMIE5PTUlORUVTIExJTUlURUSUhpSMHSAgQk5ZIE1FTExPTiBO
T01JTkVFUyBMSU1JVEVElIwdICBCTlkgTUVMTE9OIE5PTUlORUVTIExJTUlURUSUhpSMLSAgQ0RJ
QiAmIFBBUlRORVJTIElOVkVTVE1FTlQgSE9MRElORyBQVEUuTFRELpSMLSAgQ0RJQiAmIFBBUlRO
RVJTIElOVkVTVE1FTlQgSE9MRElORyBQVEUuTFRELpSGlIwTICBDSU1CIEJBTksgQkVSSEFSRJSM
EyAgQ0lNQiBCQU5LIEJFUkhBUkSUhpSMVCAgRUxFQ1RSSUNJVFkgR0VORVJBVElORyBBVVRIT1JJ
VFkgT0YgVEhBSUxBTkQgU0FWSU5HIEFORCBDUkVESVQgQ09PUEVSQVRJVkUgTElNSVRFRJSMVCAg
RUxFQ1RSSUNJVFkgR0VORVJBVElORyBBVVRIT1JJVFkgT0YgVEhBSUxBTkQgU0FWSU5HIEFORCBD
UkVESVQgQ09PUEVSQVRJVkUgTElNSVRFRJSGlIw5ICBIU0JDIEJBTksgUExDIC0gU0FVREkgQ0VO
VFJBTCBCQU5LIFNFQ1VSSVRJRVMgQUNDT1VOVCBBlIw5ICBIU0JDIEJBTksgUExDIC0gU0FVREkg
Q0VOVFJBTCBCQU5LIFNFQ1VSSVRJRVMgQUNDT1VOVCBBlIaUjDQgIEhTQkMgQkFOSyBQTEMtUFJV
REVOVElBTCBBU1NVUkFOQ0UgQ09NUEFOWSBMSU1JVEVElIw0ICBIU0JDIEJBTksgUExDLVBSVURF
TlRJQUwgQVNTVVJBTkNFIENPTVBBTlkgTElNSVRFRJSGlIwPICBJTkcgQkFOSyBOLlYulIwPICBJ
TkcgQkFOSyBOLlYulIaUjCggIE1PUkdBTiBTVEFOTEVZICYgQ08uIElOVEVSTkFUSU9OQUwgUExD
lIwoICBNT1JHQU4gU1RBTkxFWSAmIENPLiBJTlRFUk5BVElPTkFMIFBMQ5SGlIwRICBNVUZHIEJB
TkssIExURC6UjBEgIE1VRkcgQkFOSywgTFRELpSGlIwjICBOLkMuQi5UUlVTVCBMSU1JVEVELU5P
UkdFUyBCQU5LIDWUjCMgIE4uQy5CLlRSVVNUIExJTUlURUQtTk9SR0VTIEJBTksgNZSGlIwdICBO
T1JUUlVTVCBOT01JTkVFUyBMVEQtQ0wgQUOUjB0gIE5PUlRSVVNUIE5PTUlORUVTIExURC1DTCBB
Q5SGlIwuICBTT1VUSCBFQVNUIEFTSUEgVUsgKFRZUEUgQSkgTk9NSU5FRVMgTElNSVRFRJSMLiAg
U09VVEggRUFTVCBBU0lBIFVLIChUWVBFIEEpIE5PTUlORUVTIExJTUlURUSUhpSMLiAgU09VVEgg
RUFTVCBBU0lBIFVLIChUWVBFIEMpIE5PTUlORUVTIExJTUlURUSUjC4gIFNPVVRIIEVBU1QgQVNJ
QSBVSyAoVFlQRSBDKSBOT01JTkVFUyBMSU1JVEVElIaUjCwgIFNPVVRIIEVBU1QgQVNJQSBVSyBU
WVBFIEMgTk9NSU5FRVMgTElNSVRFRJSMLCAgU09VVEggRUFTVCBBU0lBIFVLIFRZUEUgQyBOT01J
TkVFUyBMSU1JVEVElIaUjCUgIFNUQVRFIFNUUkVFVCBCQU5LIEFORCBUUlVTVCBDT01QQU5ZlIwl
ICBTVEFURSBTVFJFRVQgQkFOSyBBTkQgVFJVU1QgQ09NUEFOWZSGlIwdICBTVEFURSBTVFJFRVQg
RVVST1BFIExJTUlURUSUjB0gIFNUQVRFIFNUUkVFVCBFVVJPUEUgTElNSVRFRJSGlIwdICBUSEUg
QkFOSyBPRiBORVcgWU9SSyBNRUxMT06UjB0gIFRIRSBCQU5LIE9GIE5FVyBZT1JLIE1FTExPTpSG
lIxHICBUSEUgRkVERVJBVElPTiBPRiBTQVZJTkdTIEFORCBDUkVESVQgQ09PUEVSQVRJVkVTIE9G
IFRIQUlMQU5EIExJTUlURUSUjEcgIFRIRSBGRURFUkFUSU9OIE9GIFNBVklOR1MgQU5EIENSRURJ
VCBDT09QRVJBVElWRVMgT0YgVEhBSUxBTkQgTElNSVRFRJSGlIwbICBUT0tZTyBDRU5UVVJZIENP
UlBPUkFUSU9OlIwbICBUT0tZTyBDRU5UVVJZIENPUlBPUkFUSU9OlIaUjDMgIFVPQiBLQVkgSElB
TiAoSE9ORyBLT05HKSBMSU1JVEVEIC0gQ2xpZW50IEFjY291bnSUjDMgIFVPQiBLQVkgSElBTiAo
SE9ORyBLT05HKSBMSU1JVEVEIC0gQ2xpZW50IEFjY291bnSUhpSMLCAg4LiB4Lij4Liw4LiX4Lij
4Lin4LiH4LiB4Liy4Lij4LiE4Lil4Lix4LiHlIwTTWluaXN0cnkgb2YgRmluYW5jZZSGlIyUICDg
uIHguK3guIfguJfguLjguJnguKPguKfguKEg4Lin4Liy4Lii4Li44Lig4Lix4LiB4Lip4LmM4Lir
4LiZ4Li24LmI4LiHIOC5guC4lOC4oiDguJrguKXguIgu4LiB4Lij4Li44LiH4LmE4LiX4LiiIOC4
iOC4s+C4geC4seC4lCAo4Lih4Lir4Liy4LiK4LiZKZSME1dheXVwYXQgYnkgS1RCIGZ1bmSUhpSM
miAg4LiB4Lit4LiH4LiX4Li44LiZ4Lij4Lin4LihIOC4p+C4suC4ouC4uOC4oOC4seC4geC4qeC5
jOC4q+C4meC4tuC5iOC4hyDguYLguJTguKIg4Lia4Lil4LiILuC5gOC4reC5h+C4oeC5gOC4reC4
n+C4i+C4tSDguIjguLPguIHguLHguJQgKOC4oeC4q+C4suC4iuC4mSmUjBNXYXl1cGF0IGJ5IE1G
QyBGdW5klIaUjDsgIOC4quC4s+C4meC4seC4geC4h+C4suC4meC4m+C4o+C4sOC4geC4seC4meC4
quC4seC4h+C4hOC4oZSMD1NvY2lhbCBTZWN1cml0eZSGlIwdIEJOWSBNRUxMT04gTk9NSU5FRVMg
TElNSVRFRCCUjB0gQk5ZIE1FTExPTiBOT01JTkVFUyBMSU1JVEVEIJSGlIwdIE5PUlRSVVNUIE5P
TUlORUVTIExURC1DTCBBQyCUjB0gTk9SVFJVU1QgTk9NSU5FRVMgTFRELUNMIEFDIJSGlIwdIFNU
QVRFIFNUUkVFVCBFVVJPUEUgTElNSVRFRCCUjB0gU1RBVEUgU1RSRUVUIEVVUk9QRSBMSU1JVEVE
IJSGlIwdIFRIRSBCQU5LIE9GIE5FVyBZT1JLIE1FTExPTiCUjB0gVEhFIEJBTksgT0YgTkVXIFlP
UksgTUVMTE9OIJSGlIxSIOC4muC4o+C4tOC4qeC4seC4lyDguYTguJfguKLguYDguK3guYfguJng
uKfguLXguJTguLXguK3guLLguKPguYwg4LiI4Liz4LiB4Lix4LiUIJSMCVRoYWkgTkRWUpSGlIxr
IOC4nuC4o+C4sOC4muC4suC4l+C4quC4oeC5gOC4lOC5h+C4iOC4nuC4o+C4sOC4p+C4iuC4tOC4
o+C5gOC4geC4peC5ieC4suC5gOC4iOC5ieC4suC4reC4ouC4ueC5iOC4q+C4seC4pyCUjARLaW5n
lIaUjDsg4Liq4Liz4LiZ4Lix4LiB4LiH4Liy4LiZ4Lib4Lij4Liw4LiB4Lix4LiZ4Liq4Lix4LiH
4LiE4LihIJSMOyDguKrguLPguJnguLHguIHguIfguLLguJnguJvguKPguLDguIHguLHguJnguKrg
uLHguIfguITguKEglIaUjB9NUi4gSEVORFJJSyBST0JFUlRVUyBDQVNURU5ESUpLlIwfTVIuIEhF
TkRSSUsgUk9CRVJUVVMgQ0FTVEVORElKS5SGlIwVTVIuIFBSQUNIQSBDSEFJU1VWQVJOlIwVTVIu
IFBSQUNIQSBDSEFJU1VWQVJOlIaUjBdNUi4gU09NQ0hBSSBMSU1USElMQUtVTpSMF01SLiBTT01D
SEFJIExJTVRISUxBS1VOlIaUjB1NUi4gU09NQ0hBUlQgTkFNU1JJQ0hBUk9FTlNVS5SMHU1SLiBT
T01DSEFSVCBOQU1TUklDSEFST0VOU1VLlIaUjB1NUlMuIENIQVJVTkVFIENISU5XT05HVk9SQUtV
TJSMHU1SUy4gQ0hBUlVORUUgQ0hJTldPTkdWT1JBS1VMlIaUjBdNUlMuIFBBTklEQSBUSEVQS0FO
SkFOQZSMF01SUy4gUEFOSURBIFRIRVBLQU5KQU5BlIaUjBpNUlMuIFZBTlNBTU9STiBXQU5OQU1F
VEhFRZSMGk1SUy4gVkFOU0FNT1JOIFdBTk5BTUVUSEVFlIaUjInguIHguK3guIfguJfguLjguJkg
IOC5gOC4nuC4t+C5iOC4reC4geC4suC4o+C4n+C4t+C5ieC4meC4n+C4ueC5geC4peC4sOC4nuC4
seC4kuC4meC4suC4o+C4sOC4muC4muC4quC4luC4suC4muC4seC4meC4geC4suC4o+C5gOC4h+C4
tOC4mZSMieC4geC4reC4h+C4l+C4uOC4mSAg4LmA4Lie4Li34LmI4Lit4LiB4Liy4Lij4Lif4Li3
4LmJ4LiZ4Lif4Li54LmB4Lil4Liw4Lie4Lix4LiS4LiZ4Liy4Lij4Liw4Lia4Lia4Liq4LiW4Liy
4Lia4Lix4LiZ4LiB4Liy4Lij4LmA4LiH4Li04LiZlIaUjJPguIHguK3guIfguJfguLjguJnguKPg
uKfguKEgIOC4p+C4suC4ouC4uOC4oOC4seC4geC4qeC5jOC4q+C4meC4tuC5iOC4hyDguYLguJTg
uKIg4Lia4Lil4LiILuC4geC4o+C4uOC4h+C5hOC4l+C4oiDguIjguLPguIHguLHguJQgKOC4oeC4
q+C4suC4iuC4mSmUjJPguIHguK3guIfguJfguLjguJnguKPguKfguKEgIOC4p+C4suC4ouC4uOC4
oOC4seC4geC4qeC5jOC4q+C4meC4tuC5iOC4hyDguYLguJTguKIg4Lia4Lil4LiILuC4geC4o+C4
uOC4h+C5hOC4l+C4oiDguIjguLPguIHguLHguJQgKOC4oeC4q+C4suC4iuC4mSmUhpSMmeC4geC4
reC4h+C4l+C4uOC4meC4o+C4p+C4oSAg4Lin4Liy4Lii4Li44Lig4Lix4LiB4Lip4LmM4Lir4LiZ
4Li24LmI4LiHIOC5guC4lOC4oiDguJrguKXguIgu4LmA4Lit4LmH4Lih4LmA4Lit4Lif4LiL4Li1
IOC4iOC4s+C4geC4seC4lCAo4Lih4Lir4Liy4LiK4LiZKZSMmeC4geC4reC4h+C4l+C4uOC4meC4
o+C4p+C4oSAg4Lin4Liy4Lii4Li44Lig4Lix4LiB4Lip4LmM4Lir4LiZ4Li24LmI4LiHIOC5guC4
lOC4oiDguJrguKXguIgu4LmA4Lit4LmH4Lih4LmA4Lit4Lif4LiL4Li1IOC4iOC4s+C4geC4seC4
lCAo4Lih4Lir4Liy4LiK4LiZKZSGlIxB4LiB4Lit4LiH4LiX4Li44LiZ4LmA4Lib4Li04LiUICBT
Q0IgU0VUIEJBTktJTkcgU0VDVE9SIElOREVYIEZVTkSUjEHguIHguK3guIfguJfguLjguJnguYDg
uJvguLTguJQgIFNDQiBTRVQgQkFOS0lORyBTRUNUT1IgSU5ERVggRlVORJSGlIwm4LiY4LiZ4Liy
4LiE4Liy4LijICDguK3guK3guKHguKrguLTguJmUjCbguJjguJnguLLguITguLLguKMgIOC4reC4
reC4oeC4quC4tOC4mZSGlIxA4LiZLuC4qi4g4LiQ4Li04LiV4Li04LiZ4Lix4LiZ4LiX4LmMIOC4
p+C4seC4mOC4meC5gOC4p+C4hOC4tOC4mZSMQOC4mS7guKouIOC4kOC4tOC4leC4tOC4meC4seC4
meC4l+C5jCDguKfguLHguJjguJnguYDguKfguITguLTguJmUhpSMNOC4mS7guKouIOC4reC4leC4
tOC4meC4uOC4iiDguJXguLHguJnguJXguLTguKfguLTguJeUjDTguJku4LiqLiDguK3guJXguLTg
uJnguLjguIog4LiV4Lix4LiZ4LiV4Li04Lin4Li04LiXlIaUjETguJnguLLguIcg4LiI4Lij4Li5
4LiN4Lil4Lix4LiB4Lip4LiT4LmMIOC4nuC4suC4meC4tOC4iuC4iuC4teC4p+C4sJSMROC4meC4
suC4hyDguIjguKPguLnguI3guKXguLHguIHguKnguJPguYwg4Lie4Liy4LiZ4Li04LiK4LiK4Li1
4Lin4LiwlIaUjDjguJnguLLguIcg4LiU4Lin4LiH4LmD4LiIIOC4p+C4peC4seC4ouC5gOC4quC4
luC4teC4ouC4o5SMOOC4meC4suC4hyDguJTguKfguIfguYPguIgg4Lin4Lil4Lix4Lii4LmA4Liq
4LiW4Li14Lii4LijlIaUjETguJnguLLguIcg4Liq4Lih4Lie4LijIOC4iOC4tuC4h+C4o+C4uOC5
iOC4h+C5gOC4o+C4t+C4reC4h+C4geC4tOC4iJSMROC4meC4suC4hyDguKrguKHguJ7guKMg4LiI
4Li24LiH4Lij4Li44LmI4LiH4LmA4Lij4Li34Lit4LiH4LiB4Li04LiIlIaUjB7guJnguLLguKIg
U0lOVFUgV09OR1BJWUFCQVZPUk6UjB7guJnguLLguKIgU0lOVFUgV09OR1BJWUFCQVZPUk6UhpSM
I+C4meC4suC4oiBTVUNIQUlDSEFOIFdPTkdQSVlBQk9WT1JOlIwj4LiZ4Liy4LiiIFNVQ0hBSUNI
QU4gV09OR1BJWUFCT1ZPUk6UhpSMPuC4meC4suC4oiDguJ7guLTguKrguLTguJAg4Lie4Lik4LiB
4Lip4LmM4LmE4Lie4Lia4Li54Lil4Lii4LmMlIw+4LiZ4Liy4LiiIOC4nuC4tOC4quC4tOC4kCDg
uJ7guKTguIHguKnguYzguYTguJ7guJrguLnguKXguKLguYyUhpSMKeC4muC4o+C4tOC4qeC4seC4
lyAgQ0hPRFRIQU5BV0FUIENPLixMVEQulIwp4Lia4Lij4Li04Lip4Lix4LiXICBDSE9EVEhBTkFX
QVQgQ08uLExURC6UhpSMKOC4muC4o+C4tOC4qeC4seC4lyAgQ0lUWSBSRUFMVFkgQ08uLExURC6U
jCjguJrguKPguLTguKnguLHguJcgIENJVFkgUkVBTFRZIENPLixMVEQulIaUjCnguJrguKPguLTg
uKnguLHguJcgIEVBU1RFUk4gU1VHQVIgQ08uLExURJSMKeC4muC4o+C4tOC4qeC4seC4lyAgRUFT
VEVSTiBTVUdBUiBDTy4sTFRElIaUjC3guJrguKPguLTguKnguLHguJcgIFRoYWkgTlZEUiBDb21w
YW55IExpbWl0ZWSUjC3guJrguKPguLTguKnguLHguJcgIFRoYWkgTlZEUiBDb21wYW55IExpbWl0
ZWSUhpSMLOC4muC4o+C4tOC4qeC4seC4lyAgWVAgSU5URVIgQ09NUEFOWSBMSU1JVEVElIws4Lia
4Lij4Li04Lip4Lix4LiXICBZUCBJTlRFUiBDT01QQU5ZIExJTUlURUSUhpSMZuC4muC4o+C4tOC4
qeC4seC4lyAg4LiB4Lij4Li44LiH4LmA4LiX4Lie4Lib4Lij4Liw4LiB4Lix4LiZ4Lig4Lix4Lii
IOC4iOC4s+C4geC4seC4lCAo4Lih4Lir4Liy4LiK4LiZKZSMZuC4muC4o+C4tOC4qeC4seC4lyAg
4LiB4Lij4Li44LiH4LmA4LiX4Lie4Lib4Lij4Liw4LiB4Lix4LiZ4Lig4Lix4LiiIOC4iOC4s+C4
geC4seC4lCAo4Lih4Lir4Liy4LiK4LiZKZSGlIxp4Lia4Lij4Li04Lip4Lix4LiXICDguIHguKPg
uLjguIfguYDguJfguJ7guYLguJfguKPguJfguLHguKjguJnguYzguYHguKXguLDguKfguLTguJfg
uKLguLgg4LiI4Liz4LiB4Lix4LiUlIxp4Lia4Lij4Li04Lip4Lix4LiXICDguIHguKPguLjguIfg
uYDguJfguJ7guYLguJfguKPguJfguLHguKjguJnguYzguYHguKXguLDguKfguLTguJfguKLguLgg
4LiI4Liz4LiB4Lix4LiUlIaUjE3guJrguKPguLTguKnguLHguJcgIOC4iOC4tSDguYHguK3guKUg
4LmB4Lit4Liq4LmA4LiL4LiX4Liq4LmMIOC4iOC4s+C4geC4seC4lJSMTeC4muC4o+C4tOC4qeC4
seC4lyAg4LiI4Li1IOC5geC4reC4pSDguYHguK3guKrguYDguIvguJfguKrguYwg4LiI4Liz4LiB
4Lix4LiUlIaUjFXguJrguKPguLTguKnguLHguJcgIOC4i+C4uOC4m+C5gOC4m+C4reC4o+C5jCDg
uYHguK3guKrguYDguIvguJfguKrguYwg4LiI4Liz4LiB4Lix4LiUlIxV4Lia4Lij4Li04Lip4Lix
4LiXICDguIvguLjguJvguYDguJvguK3guKPguYwg4LmB4Lit4Liq4LmA4LiL4LiX4Liq4LmMIOC4
iOC4s+C4geC4seC4lJSGlIxO4Lia4Lij4Li04Lip4Lix4LiXICDguJfguLjguJnguJjguJnguIrg
uLLguJUg4LiI4Liz4LiB4Lix4LiUICjguKHguKvguLLguIrguJkplIxO4Lia4Lij4Li04Lip4Lix
4LiXICDguJfguLjguJnguJjguJnguIrguLLguJUg4LiI4Liz4LiB4Lix4LiUICjguKHguKvguLLg
uIrguJkplIaUjD/guJrguKPguLTguKnguLHguJcgIOC4l+C4uOC4meC4oeC4q+C4suC5guC4iuC4
hCDguIjguLPguIHguLHguJSUjD/guJrguKPguLTguKnguLHguJcgIOC4l+C4uOC4meC4oeC4q+C4
suC5guC4iuC4hCDguIjguLPguIHguLHguJSUhpSMSOC4muC4o+C4tOC4qeC4seC4lyAg4LiX4Li4
4LiZ4Lij4Li44LmI4LiH4LmA4Lij4Li34Lit4LiHIOC4iOC4s+C4geC4seC4lJSMSOC4muC4o+C4
tOC4qeC4seC4lyAg4LiX4Li44LiZ4Lij4Li44LmI4LiH4LmA4Lij4Li34Lit4LiHIOC4iOC4s+C4
geC4seC4lJSGlIxh4Lia4Lij4Li04Lip4Lix4LiXICDguJrguLXguJrguLXguJfguLXguKfguLUg
4LmB4LiL4LiX4LmA4LiX4Lil4Lin4Li04LiK4Lix4LmI4LiZIOC4iOC4s+C4geC4seC4lJSMYeC4
muC4o+C4tOC4qeC4seC4lyAg4Lia4Li14Lia4Li14LiX4Li14Lin4Li1IOC5geC4i+C4l+C5gOC4
l+C4peC4p+C4tOC4iuC4seC5iOC4mSDguIjguLPguIHguLHguJSUhpSMbeC4muC4o+C4tOC4qeC4
seC4lyAg4Lia4Li14Lia4Li14LiX4Li14Lin4Li1IOC5geC4reC4quC5gOC4i+C4leC5geC4oeC5
gOC4meC4iOC5gOC4oeC4meC4l+C5jCDguIjguLPguIHguLHguJSUjG3guJrguKPguLTguKnguLHg
uJcgIOC4muC4teC4muC4teC4l+C4teC4p+C4tSDguYHguK3guKrguYDguIvguJXguYHguKHguYDg
uJnguIjguYDguKHguJnguJfguYwg4LiI4Liz4LiB4Lix4LiUlIaUjEvguJrguKPguLTguKnguLHg
uJcgIOC4oeC4q+C4suC4geC4tOC4iOC5guC4ruC4peC4lOC4tOC5ieC4hyDguIjguLPguIHguLHg
uJSUjEvguJrguKPguLTguKnguLHguJcgIOC4oeC4q+C4suC4geC4tOC4iOC5guC4ruC4peC4lOC4
tOC5ieC4hyDguIjguLPguIHguLHguJSUhpSMXuC4muC4o+C4tOC4qeC4seC4lyAg4Liq4LiV4Lij
4Lit4LiH4LmC4Liu4Lil4LiU4LmMIOC5geC4reC4quC5gOC4i+C5h+C4l+C4quC5jCDguIjguLPg
uIHguLHguJSUjF7guJrguKPguLTguKnguLHguJcgIOC4quC4leC4o+C4reC4h+C5guC4ruC4peC4
lOC5jCDguYHguK3guKrguYDguIvguYfguJfguKrguYwg4LiI4Liz4LiB4Lix4LiUlIaUjFDguJrg
uKPguLTguKnguLHguJcgIOC5gOC4reC5h+C4oSDguJrguLUg4LmA4LiEIOC4iOC4s+C4geC4seC4
lCAo4Lih4Lir4Liy4LiK4LiZKZSMUOC4muC4o+C4tOC4qeC4seC4lyAg4LmA4Lit4LmH4LihIOC4
muC4tSDguYDguIQg4LiI4Liz4LiB4Lix4LiUICjguKHguKvguLLguIrguJkplIaUjGnguJrguKPg
uLTguKnguLHguJcgIOC5guC4o+C4h+C4nuC4ouC4suC4muC4suC4peC4o+C4suC4oeC4hOC4s+C5
geC4q+C4hyDguIjguLPguIHguLHguJQgKOC4oeC4q+C4suC4iuC4mSmUjGnguJrguKPguLTguKng
uLHguJcgIOC5guC4o+C4h+C4nuC4ouC4suC4muC4suC4peC4o+C4suC4oeC4hOC4s+C5geC4q+C4
hyDguIjguLPguIHguLHguJQgKOC4oeC4q+C4suC4iuC4mSmUhpRlhZSGlGV1Sv7///+GlIwWX21l
cmdlX2RpYWxvZ19zZXR0aW5nc5R9lEr8////hpSMDl9zZWxlY3RlZF9pdGVtlGhWSwSGlEr+////
hpSMEW91dHB1dF90YWJsZV9uYW1llIwAlEr+////hpRoBEsCdYwKYXR0cmlidXRlc5R9lCiMBGJh
bmuUSwFoS0sCaFFLAnWMBW1ldGFzlH2UaFZLA3N1YmgJKYGUfZQoaAx9lChoDn2UKGgTXZRoFmFo
GV2UaBthaB5dlGggYWgkXZRoJ2FoKl2UaC1haDBdlGgyYWg1XZRoN2FoOl2UaDxhaEBdlGhDYWhH
XZRoSmFoTV2UaFBhaFNdlGhVYXVK/v///4aUajUBAAB9lEr8////hpRqOAEAAGhFSwSGlEr+////
hpRqOwEAAGo8AQAASv7///+GlGgESwJ1aj4BAAB9lCiMBnN5bWJvbJRLAWhLSwJoUUsCdWpBAQAA
fZRoRUsDc3ViaAkpgZR9lChoDH2UKGgOfZQoaBNdlGgWYWgZXZRoG2FoHl2UaCBhaCRdlGgnYWgq
XZRoLWFoMF2UaDJhaDVdlGg3YWg6XZRoPGFoQF2UaENhaEddlGhKYWhNXZRoUGFoU12UaFVhdUr+
////hpRqNQEAAH2USvz///+GlGo4AQAAaEtLBIaUSv7///+GlGo7AQAAajwBAABK/v///4aUaARL
AnVqPgEAAH2UaloBAABLAXNqQQEAAH2UKGhFSwNoS0sDaFFLA3V1YmV1Lg==
</properties>
		<properties node_id="10" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x04\xff\x00\x00\x03\x1f\x00\x00\x00\x00\x00\x00\x005\x00\x00\x04\xff\x00\x00\x03\x1f\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x005\x00\x00\x04\xff\x00\x00\x03\x1f', 'select_rows': True, 'selected_cols': None, 'selected_rows': None, 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="11" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x04\xff\x00\x00\x03\x1f\x00\x00\x00\x00\x00\x00\x005\x00\x00\x04\xff\x00\x00\x03\x1f\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x005\x00\x00\x04\xff\x00\x00\x03\x1f', 'select_rows': True, 'selected_cols': None, 'selected_rows': None, 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="12" format="pickle">gASVpQIAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAAAAAAAEQAAATyAAACywAAAAAAAABgAAAE8gAAAssAAAAA
AAAAAAUAAAAAAAAAAGAAAATyAAACy5SMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiIwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
BGJhbmuUS2WGlIwJZ3JvdXBfdmFylIwIaW52ZXN0b3KUS2WGlIwJc2VsZWN0aW9ulClK/v///4aU
aA1LAXWMCmF0dHJpYnV0ZXOUfZQoaBhLAYwFc2hhcmWUSwKMDXNoYXJlX3BlcmNlbnSUSwJ1jAVt
ZXRhc5R9lGgbSwFzdWJoEimBlH2UKGgVfZQoaBdoGEtlhpRoGmgYS2WGlGgdKUr+////hpRoDUsB
dWgffZQoaBhLAWghSwJoIksCdWgjfZRoG0sDc3ViaBIpgZR9lChoFX2UKGgXjAZzeW1ib2yUS2WG
lGgajARuYW1llEtlhpRoHSlK/v///4aUaA1LAXVoH32UKGgwSwFoIUsCaCJLAnVoI32UaDJLAXN1
YmV1Lg==
</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
